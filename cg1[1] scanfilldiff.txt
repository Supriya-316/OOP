#include<iostream>
#include<conio.h>
#include<graphics.h>
#include<stdlib.h>
using namespace std;

class point {
	public:
		int x,y;
};
class poly {
	private:
		int v,xmin,ymin,xmax,ymax;
		point p[20];
		int inter[20],x,y;
	public:
		int c;
		void read();
		void calcs();
		void display();
		void ints(float);
		void sort(int);
};
void poly::read() {
	int i;
	cout<<"\nScan fill Algorithm";
	cout<<"\nEnter the number of vertices of polygon:";
	cin>>v;
	if(v>2) {
		for(i=0;i<v;i++) {
		
		cout<<"Enter the coordinate no."<<i+1<<":"<<endl;
		cout<<"\tx"<<i+1<<"=";
		cin>>p[i].x;
		cout<<"\ty"<<i+1<<"=";
		cin>>p[i].y; 
	}
		p[i].x=p[0].x;
		p[i].y=p[0].y ;
		xmin=xmax=p[0].x;
		ymin=ymax=p[0].y;
		
	}
	else {
		cout<<"enter valid no. of vertices"<<endl;
	}
}
void poly::calcs() {
	int i;
	for(i=0;i<v;i++) {
		if(xmax<=p[i].x){
			xmax=p[i].x;
		}
		if(ymax<=p[i].y){
			ymax=p[i].y;
		}
		if(xmin>=p[i].x){
			xmin=p[i].x;
		}
		if(ymin>=p[i].y){
			ymin=p[i].y;
		}
	}
}

void poly::display() {
	char ch1;
	char ch ='Y';
	float s,s2;
	do {
		cout<<"\nMENU";
		cout<<"\n\t1.Scan fill Algorithm";
		cout<<"\n\t2.Exit";
		cout<<"\nenter your choice:";
		cin>>ch1;
		switch(ch1) {
			case 1 :
				s=ymin+0.01;
				delay(100);
				cleardevice();
				while(s<=ymax) {
					ints(s);
					sort(s);
					s++;
				}
			break;
			case 2 :
				exit(0);		
				}
		cout<<"\n\tDO you want to continue:";
		cin>>ch;
	}while(ch=='y' || ch== 'Y');
}
void poly::ints(float z) {
	int x1,x2,y1,y2,i,temp;
	int c=0;
	for(i=0;i<v;i++) {
		x1=p[i].x;
		y1=p[i].y;
		x2=p[i+1].x;
		y2=p[i+1].y;
		if(y2<y1) {
			temp=x1;
            x1=x2;
			x2=temp;
			temp=y1;
			y1=y2;
			y2=temp;	
		}
		if(z<=ymax && z>=ymin ) {
			if((y2-y1) == 0) {
				x=x1;
			}
			else {
				x=((x2-x1)*(z-y1))/(y2-y1);
				x=x+x1;
			}
		if(x>=xmin && x<=xmax) {
			inter[c++]=x;
		}
		}
	}
} 
void poly::sort(int z) {
	int i;
	for(i=0;i<v;i++) {
		line(p[i].x,p[i].y,p[i+1].x,p[i+1].y);
	}
	delay(100);
	for(i=0;i<c;i+=2) {
		delay(100);
		line(inter[i],z,inter[i+1],z);
	}
} 
int main() {
	int cl;
	initwindow(700,800);
	cleardevice();
	poly x;
	x.read() ;
	x.calcs() ;
	cleardevice();
	cout<<"\nEnter the colour range between 0 to 15:";
	cin>>cl;
	setcolor(cl);
	x.display();
	closegraph();
	getch();
	return 0;
}